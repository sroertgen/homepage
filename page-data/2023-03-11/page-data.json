{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023-03-11/","result":{"data":{"markdownRemark":{"html":"<p><strong>TL;DR</strong>: Meine Erfahrungen beim Aufsetzen eines NOSTR-Relays auf Basis von <a href=\"https://github.com/Cameri/nostream\"><code class=\"language-text\">nostream</code></a> und erste Interaktionen mit <a href=\"https://github.com/nbd-wtf/nostr-tools\"><code class=\"language-text\">nostr-tools</code></a></p>\n<p><a href=\"https://nostr.com/\">NOSTR</a> ist ein dezentrales soziales Netzwerk und hat einiges an Aufmerksamkeit gewonnen, nachdem Elon Musk nicht nur das Posten von Mastodon Handles, sondern unter anderem auch von NOSTR Keys verbot.</p>\n<blockquote>\n<p>\"Specifically, we will remove accounts created solely for the purpose of promoting other social platforms and content that contains links or usernames for the following platforms: Facebook, Instagram, Mastodon, Truth Social, Tribel, Nostr and Post.\"</p>\n</blockquote>\n<p>Mittlerweile ist der Tweet gel√∂scht worden und nicht mehr verf√ºgbar, in dem Elon dies ank√ºndigte, aber das Web Archive vergisst gl√ºcklicherweise nicht: <a href=\"https://web.archive.org/web/20221218173806/https://help.twitter.com/en/rules-and-policies/social-platforms-policy\">https://web.archive.org/web/20221218173806/https://help.twitter.com/en/rules-and-policies/social-platforms-policy</a></p>\n<p>Die Aufmerksamkeit Elons auf diesem noch sehr jungen Protokoll mag auch daran liegen, dass Jack Dorsey kurze Zeit vorher 14 Bitcoin an <a href=\"https://twitter.com/fiatjaf\">@fiatjaf</a> spendete, um die Entwicklung von NOSTR zu f√∂rdern.</p>\n<p>Das soll aber nicht noch eine \"Was ist NOSTR\"-Einf√ºhrung werden (daf√ºr gerne auch hier schauen: <a href=\"https://nostr-resources.com/\">https://nostr-resources.com/</a>), sondern ich m√∂chte kurz von meinen Erfahrungen beim Einrichten eines Relays sowie den ersten Interaktionen damit berichten.</p>\n<h2 id=\"relay-einrichten\" style=\"position:relative;\"><a href=\"#relay-einrichten\" aria-label=\"relay einrichten permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Relay einrichten</h2>\n<p>Ein NOSTR-Relay bietet eine simple Websocket Verbindung an, zu der sich Clienten verbinden k√∂nnen.\nDie ausgetauschten Daten sind wiederum simple JSON-Objekte, die mit einem privaten Schl√ºssel signiert werden (siehe auch <a href=\"https://github.com/nostr-protocol/nips/blob/master/01.md#nip-01\">NIP-01</a>).</p>\n<p>Hier gibt es bereits ein paar Guides, die bei dem Setup eines Relays unterst√ºtzen.\nIch habe mich an diesen beiden Guides orientiert, die ein Relay auf der Basis von <a href=\"https://github.com/Cameri/nostream\">nostream</a> einrichten:</p>\n<ul>\n<li><a href=\"https://andreneves.xyz/p/set-up-a-nostr-relay-server-in-under\">https://andreneves.xyz/p/set-up-a-nostr-relay-server-in-under</a></li>\n<li><a href=\"https://www.massmux.com/install-a-nostr-relay/\">https://www.massmux.com/install-a-nostr-relay/</a></li>\n</ul>\n<p>Ich empfehle den zweiten Guide, da dieser noch etwas ausf√ºhrlicher ist, vor allem, wenn du noch nie mit Docker gearbeitet hast.</p>\n<p>Die gr√∂√üte Herausforderung f√ºr mich bestand in der Konfiguration meines Routers und der Einrichtung einer Subdomain, die auf meinen Homeserver zeigen sollte.\nF√ºr alles finden sich jedoch haufenweise Guides im Netz.\nMeine gr√∂√üte Lesson-Learned war, dass ich beim Eintragen eines CNAMES f√ºr meines Subdomain am Ende der Domain einen Punkt setzen musste.</p>\n<p>Am Ende der Einrichtung k√∂nnt ihr <a href=\"https://websocketking.com/\">https://websocketking.com/</a> besuchen und versuchen eine Verbindung zu eurem Relay herzustellen.\nWenn eine Verbindung hergestellt werden kann, habt ihr es geschafft üéâ</p>\n<p>Ich habe mir zum Testen einen Account auf <a href=\"https://snort.social\">snort.social</a> angelegt, unter \"Settings\" alle Relays entfernt und nur mein Relay hinzugef√ºgt.\nAnschlie√üend habe ich ein paar Notes ver√∂ffentlicht, in meinem Mobil-Client (Amethyst) das Relay ebenfalls hinzugef√ºgt und voil√†, die Notes erschienen auch auf meinem Handy.</p>\n<p>Es war ehrlich gesagt, fast schon ein wenig magisch, wie einfach das alles funktioniert hat.</p>\n<div style=\"width:100%;height:0;padding-bottom:92%;position:relative;\"><iframe src=\"https://giphy.com/embed/9r75ILTJtiDACKOKoY\" width=\"100%\" height=\"100%\" style=\"position:absolute\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe></div><p><a href=\"https://giphy.com/gifs/ghoodgirlmagic-magic-ghood-girl-9r75ILTJtiDACKOKoY\"></a></p>\n<h2 id=\"mit-relay-interagieren\" style=\"position:relative;\"><a href=\"#mit-relay-interagieren\" aria-label=\"mit relay interagieren permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mit Relay interagieren</h2>\n<p>Richtig spannend ist es aber, Applikationen gegen so ein Protokoll zu entwickeln.\nEndlich keine nervigen Twitter-API Zug√§nge mehr, jetzt kann ich einfach gegen mein eigenes Relay entwickeln und testen.\nDas allein ist schon viel wert.</p>\n<p>Folgende Dinge habe ich ausprobiert und m√∂chte ich kurz darstellen:</p>\n<ul>\n<li>Erstellen von privaten und √∂ffentlichen Schl√ºsseln</li>\n<li>Subscription zu einem Relay</li>\n<li>Erstellen einer Note</li>\n<li>√Ñndern von Metadaten eines Users</li>\n<li>Konvertierung der Schl√ºssel in <a href=\"https://github.com/nostr-protocol/nips/blob/master/19.md\">NIP-19</a> konforme Formate</li>\n</ul>\n<p>Als Toolset nutze ich <a href=\"https://github.com/nbd-wtf/nostr-tools\">nostr-tools</a>, eine Node Bibliothek, um Nostr Clients zu entwickeln.</p>\n<p>Um die Beispiele auch bei euch auszuf√ºhren, √∂ffnet ein Terminal und f√ºhrt folgende Befehle aus:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> experiment-with-nostr\n<span class=\"token builtin class-name\">cd</span> experiment-with-nostr\n<span class=\"token function\">npm</span> init <span class=\"token parameter variable\">-y</span>\n<span class=\"token function\">npm</span> i nostr-tools</code></pre></div>\n<p>√ñffnet anschlie√üend den Ordner in einem Code-Editor und erstellt eine Datei <code class=\"language-text\">generateKeys.js</code></p>\n<h3 id=\"erstellen-von-schl√ºsseln\" style=\"position:relative;\"><a href=\"#erstellen-von-schl%C3%BCsseln\" aria-label=\"erstellen von schl√ºsseln permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Erstellen von Schl√ºsseln</h3>\n<p>Zun√§chst wollen wir ein Schl√ºsselpaar erstellen.\nDas kann mit dem Anlegen eines Users verglichen werden.\nDie Schl√ºsselpaare k√∂nnen wir anschlie√üend nutzen, um unsere Notes und anderen Aktionen zu signieren.</p>\n<p><code class=\"language-text\">generateKeys.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> generatePrivateKey<span class=\"token punctuation\">,</span> getPublicKey <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"nostr-tools\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> privateKey <span class=\"token operator\">=</span> <span class=\"token function\">generatePrivateKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> publicKey <span class=\"token operator\">=</span> <span class=\"token function\">getPublicKey</span><span class=\"token punctuation\">(</span>privateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"private key = \"</span> <span class=\"token operator\">+</span> privateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"public key = \"</span> <span class=\"token operator\">+</span> publicKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>F√ºhrt das ganze mit <code class=\"language-text\">node generateKeys.js</code> aus und speichert die Schl√ºssel in einer separaten Datei, damit wir sie sp√§ter wiederverwenden k√∂nnen.</p>\n<h3 id=\"subscription-zu-einem-relay\" style=\"position:relative;\"><a href=\"#subscription-zu-einem-relay\" aria-label=\"subscription zu einem relay permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subscription zu einem Relay</h3>\n<p>Wie oben beschrieben habe ich bereits ein paar Test Notes an mein frisch aufgesetztes Relay geschickt.\nNun schauen wir mal, ob ich diese \"Events\", wie es bei NOSTR korrekt heisst, auch ausgelesen bekomme.</p>\n<p>Damit das ganze funktioniert, muss erst noch das websocket-polyfill Paket installiert werden: <code class=\"language-text\">npm i websocket-polyfill</code>.</p>\n<p>Als Relay habe ich mein frisches NOSTR-Relay eingesetzt, es l√§sst sich aber auch jedes andere verwenden.</p>\n<p>Da ich nur Text Notes bekommen m√∂chte (und bspw keine √Ñnderungen √ºber Metadaten), setze ich bei <code class=\"language-text\">kinds: [1]</code>. Hier findet ihr die <a href=\"https://github.com/nostr-protocol/nips/blob/master/01.md#basic-event-kinds\">NOSTR Event Typen</a>.</p>\n<p><code class=\"language-text\">subscribeToRelay.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"websocket-polyfill\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> relayInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"nostr-tools\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> relay <span class=\"token operator\">=</span> <span class=\"token function\">relayInit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wss://nostr.btc-library.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrelay<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connect\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">connected to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>relay<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrelay<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">failed to connect to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>relay<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">await</span> relay<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> sub <span class=\"token operator\">=</span> relay<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">kinds</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsub<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"got event:\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>F√ºhrt das ganze wieder mit <code class=\"language-text\">node subscribeToRelay.js</code> aus und es wird eine Websockerverbindung zu Relay hergestellt und ihr solltet eine Liste mit Notes bekommen.\nMit <code class=\"language-text\">Ctrl-C</code> k√∂nnt ihr die Verbindung unterbrechen.</p>\n<h3 id=\"erstellen-einer-note\" style=\"position:relative;\"><a href=\"#erstellen-einer-note\" aria-label=\"erstellen einer note permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Erstellen einer Note</h3>\n<p>Nun wollen wir eine Note erstellen und an ein Relay senden.\nDer einzige Objekttyp der in NOSTR existiert ist ein <a href=\"https://github.com/nostr-protocol/nips/blob/master/01.md#events-and-signatures\">\"Event\"</a> und hat das folgende Format:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> &lt;<span class=\"token number\">32</span>-bytes lowercase hex-encoded sha256 of the the serialized event data><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"pubkey\"</span><span class=\"token operator\">:</span> &lt;<span class=\"token number\">32</span>-bytes lowercase hex-encoded public key of the event creator><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"created_at\"</span><span class=\"token operator\">:</span> &lt;unix timestamp in seconds><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kind\"</span><span class=\"token operator\">:</span> &lt;integer><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> &lt;<span class=\"token number\">32</span>-bytes hex of the id of another event><span class=\"token punctuation\">,</span> &lt;recommended relay URL><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span> &lt;<span class=\"token number\">32</span>-bytes hex of a pubkey><span class=\"token punctuation\">,</span> &lt;recommended relay URL><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    ... <span class=\"token comment\">// other kinds of tags may be included later</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> &lt;arbitrary string><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sig\"</span><span class=\"token operator\">:</span> &lt;<span class=\"token number\">64</span>-bytes hex of the signature of the sha256 hash of the serialized event data<span class=\"token punctuation\">,</span> which is the same as the <span class=\"token string\">\"id\"</span> field>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Wie wir bereits gelernt haben, ist das senden einer Text Note ein Event vom Typ \"1\".\nDann brauchen wir also nur noch etwas \"content\" und es kann losgehen:</p>\n<p><code class=\"language-text\">createEventTextNote.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  signEvent<span class=\"token punctuation\">,</span>\n  getEventHash<span class=\"token punctuation\">,</span>\n  getPublicKey\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'nostr-tools'</span>\n\n<span class=\"token keyword\">let</span> privateKey <span class=\"token operator\">=</span> <span class=\"token string\">'your-private-key'</span>\n\n<span class=\"token keyword\">let</span> event <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">created_at</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello world, a note from your favorite bot!'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">pubkey</span><span class=\"token operator\">:</span> <span class=\"token function\">getPublicKey</span><span class=\"token punctuation\">(</span>privateKey<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nevent<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token function\">getEventHash</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\nevent<span class=\"token punctuation\">.</span>sig <span class=\"token operator\">=</span> <span class=\"token function\">signEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> privateKey<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> event_publish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'EVENT'</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>event_publish<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Nachdem ihr euren private Key eingesetzt und das ganze mit <code class=\"language-text\">node createEventTextNote.js</code> ausgef√ºhrt habt, solltet ihr ungef√§hr folgendes bekommen:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"EVENT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"created_at\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1678536852</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hello world, a note from your favorite bot!\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"pubkey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2b326b52869d5c89f6486e60815e9cc3001c13fd2cbec0b116b861ab578a95ab\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"56b6c5a89ded6ed2ae47917a60e6b5a59d51397e2121ebe69da5f1d6d3e5f43f\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"sig\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5e1ca614e505fad548d960d888d74476da21da9bedf7ac58df58cf206c076d56d92a28a66f1d974ab37d9bdfe6ca5314b821d742decbd28675a173e83d4bb249\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Sehr sch√∂n!\nAber wie kommt das jetzt zu unserem Relay?\nDazu k√∂nnten wir jetzt wieder etwas Code schreiben, aber ich m√∂chte euch noch einen anderen Weg zeigen, um zu zeigen, wie simpel die Interaktion mit Relays ist.</p>\n<p>Besucht <a href=\"https://websocketking.com/\">https://websocketking.com/</a> und verbindet euch mit einem Relay, e.g. mein Test-Relay <code class=\"language-text\">wss://nostr.btc-library.com</code>.</p>\n<p>F√ºgt anschlie√üend den Event Output ein und klickt auf \"Send\".\nZack, das Event wurde gesendet.\nFalls das ganze nicht klappt, liegt es eventuell daran, dass manche Relays eine Subscription erfordern.</p>\n<p>In dem Fall k√∂nnt ihr es mit folgendem Code versuchen und mit <code class=\"language-text\">node sendEventToRelay.js</code> ausf√ºhren:</p>\n<p><code class=\"language-text\">sendEventToRelay.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'websocket-polyfill'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  relayInit<span class=\"token punctuation\">,</span>\n  getPublicKey<span class=\"token punctuation\">,</span>\n  getEventHash<span class=\"token punctuation\">,</span>\n  signEvent\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'nostr-tools'</span>\n\n<span class=\"token keyword\">const</span> relay <span class=\"token operator\">=</span> <span class=\"token function\">relayInit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wss://nostr.btc-library.com'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> privateKey <span class=\"token operator\">=</span> <span class=\"token string\">'your-priv-key'</span>\n\n\nrelay<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">connected to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>relay<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nrelay<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">failed to connect to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>relay<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">await</span> relay<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> sub <span class=\"token operator\">=</span> relay<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">kinds</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nsub<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'got event:'</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> event <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">created_at</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello world, this is a note sent from your favorite bot!'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">pubkey</span><span class=\"token operator\">:</span> <span class=\"token function\">getPublicKey</span><span class=\"token punctuation\">(</span>privateKey<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nevent<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token function\">getEventHash</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\nevent<span class=\"token punctuation\">.</span>sig <span class=\"token operator\">=</span> <span class=\"token function\">signEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> privateKey<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> pub <span class=\"token operator\">=</span> relay<span class=\"token punctuation\">.</span><span class=\"token function\">publish</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\npub<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>relay<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> has accepted our event</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\npub<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'failed'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">reason</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">failed to publish to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>relay<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>reason<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"√§ndern-der-metadaten-eines-users\" style=\"position:relative;\"><a href=\"#%C3%A4ndern-der-metadaten-eines-users\" aria-label=\"√§ndern der metadaten eines users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>√Ñndern der Metadaten eines Users</h3>\n<p>In NOSTR gibt es nur Events.\nUm die Metadaten eines Users zu √§ndern, m√ºssen wir also ebenfalls ein Event bauen, jedoch jetzt mit <a href=\"https://github.com/nostr-protocol/nips/blob/master/01.md#basic-event-kinds\"><code class=\"language-text\">kind: 0</code></a>.\nMit folgendem Code-Schnipsel √§ndern wir den Username in \"Joe Doe\".\nDer Content wird beim √Ñndern der Metadaten √ºbrigens als \"stringified JSON Object\" √ºbermittelt:</p>\n<p><code class=\"language-text\">createEventMetadata.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  signEvent<span class=\"token punctuation\">,</span>\n  getEventHash<span class=\"token punctuation\">,</span>\n  getPublicKey\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'nostr-tools'</span>\n\n<span class=\"token keyword\">let</span> privateKey <span class=\"token operator\">=</span> <span class=\"token string\">'your-priv-key'</span>\n\n<span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Joe Doe\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> event <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">created_at</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">pubkey</span><span class=\"token operator\">:</span> <span class=\"token function\">getPublicKey</span><span class=\"token punctuation\">(</span>privateKey<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nevent<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token function\">getEventHash</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\nevent<span class=\"token punctuation\">.</span>sig <span class=\"token operator\">=</span> <span class=\"token function\">signEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> privateKey<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> event_publish <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'EVENT'</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>event_publish<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>F√ºhrt das ganze wieder mit <code class=\"language-text\">createEventMetadata.js</code> aus und postet das ganze √ºber websocketking oder tauscht den event Abschnitt in <code class=\"language-text\">sendEventToRelay.js</code> aus, falls euer Relay der Wahl das Event ohne subscription nicht annimmt.</p>\n<h3 id=\"konvertierung-der-schl√ºssel-in-nip-19-formate\" style=\"position:relative;\"><a href=\"#konvertierung-der-schl%C3%BCssel-in-nip-19-formate\" aria-label=\"konvertierung der schl√ºssel in nip 19 formate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Konvertierung der Schl√ºssel in NIP-19 Formate</h3>\n<p>Um zu vermeiden, dass privater und √∂ffentlicher Schl√ºssel zu leicht verwechselt werden, wurde ein Format entwickelt, welches die Unterscheidung vereinfacht.\nMehr dazu unter <a href=\"https://github.com/nostr-protocol/nips/blob/master/19.md\">NIP-19</a></p>\n<p>Um entsprechende formatierte Schl√ºssel zu erzeugen, k√∂nnt ihr folgenden Code benutzen (setzt eure entsprechenden Schl√ºsseldaten ein):</p>\n<p><code class=\"language-text\">genNip19.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>nip19<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'nostr-tools'</span>\n\n<span class=\"token keyword\">let</span> privateKey <span class=\"token operator\">=</span> <span class=\"token string\">\"your-priv-key\"</span>\n<span class=\"token keyword\">let</span> publicKey <span class=\"token operator\">=</span> <span class=\"token string\">\"your-pub-key\"</span>\n\n<span class=\"token keyword\">let</span> nsec <span class=\"token operator\">=</span> nip19<span class=\"token punctuation\">.</span><span class=\"token function\">nsecEncode</span><span class=\"token punctuation\">(</span>privateKey<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nsec: \"</span><span class=\"token punctuation\">,</span> nsec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> npub <span class=\"token operator\">=</span> nip19<span class=\"token punctuation\">.</span><span class=\"token function\">npubEncode</span><span class=\"token punctuation\">(</span>publicKey<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npub: \"</span><span class=\"token punctuation\">,</span> npub<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"fazit\" style=\"position:relative;\"><a href=\"#fazit\" aria-label=\"fazit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fazit</h2>\n<p>Die Interaktion mit NOSTR ist sehr straight-forward und macht Spa√ü.\nDas Protokoll (auch wenn ich es noch nicht komplett gelesen habe) scheint gut dokumentiert zu sein und ist vor allem sehr simpel gehalten.\nDas Aufsetzen eines Relays lief super schnell, f√ºr einen richtigen Produktionsbetrieb ist jedoch sicherlich noch einiges an zus√§tzlichen Einstellungen vorzunehmen.\n<code class=\"language-text\">nostr-tools</code> ist au√üerdem eine sch√∂ne Node-Bibliothek, um mit Relays zu interagieren und Services zu entwickeln.</p>\n<h2 id=\"links\" style=\"position:relative;\"><a href=\"#links\" aria-label=\"links permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links</h2>\n<ul>\n<li><a href=\"https://nostr.com/\">NOSTR</a></li>\n<li><a href=\"https://nostr-resources.com/\">NOSTR Resources</a></li>\n<li><a href=\"https://github.com/nostr-protocol/nips\">NOSTR Implementation Possibilities</a></li>\n<li><a href=\"https://github.com/Cameri/nostream\">nostream</a></li>\n<li><a href=\"https://github.com/nbd-wtf/nostr-tools\">nostr-tools</a></li>\n</ul>","frontmatter":{"title":"NOSTR - Experimenting with Relays and nostr-tools","link":null}}},"pageContext":{"slug":"/2023-03-11/"}},"staticQueryHashes":["3159585216"]}