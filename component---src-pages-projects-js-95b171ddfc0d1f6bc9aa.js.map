{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["Projects","data","css","rhythm","allFile","edges","map","node","key","id","to","childMarkdownRemark","fields","slug","frontmatter","title","excerpt","query"],"mappings":"6FAAA,mJ,kHAMe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,OACE,YAAC,IAAD,KACA,uBACE,kBACEC,IAAKA,YAAF,iBACgBC,YAAO,GADvB,mDADL,YAQA,wEACCF,EAAKG,QAAQC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAKC,IAAKD,EAAKE,IACb,YAAC,IAAD,CACEC,GAAIH,EAAKI,oBAAoBC,OAAOC,KACpCX,IAAG,GAKL,kBACEA,IAAKA,YAAF,iBACgBC,YAAO,EAAI,GAD3B,MAIFI,EAAKI,oBAAoBG,YAAYC,MAAO,IAC7C,oBACEb,IAAG,IAPP,KAYE,qBAAIK,EAAKI,oBAAoBK,gBASlC,IAAMC,EAAK","file":"component---src-pages-projects-js-95b171ddfc0d1f6bc9aa.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport Layout from \"../components/layout\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default function Projects({ data }) {\n  return (\n    <Layout>\n    <div>\n      <h1\n        css={css`\n          margin-bottom: ${rhythm(1)};\n          display: inline-block;\n          border-bottom: 1px solid;\n          `}>\n          Projects\n      </h1>\n      <p>An overview of projects done | doing | planned.</p>\n      {data.allFile.edges.map(({ node }) => (\n        <div key={node.id}>\n          <Link\n            to={node.childMarkdownRemark.fields.slug}\n            css={css`\n              text-decoration: none !important;\n              color: inherit;\n              `}\n          >\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(1 / 4)};\n            `}\n          >\n            {node.childMarkdownRemark.frontmatter.title}{\" \"}\n            <span\n              css={css`\n                color: #bbb;\n              `}\n            > \n            </span> </h3>\n            <p>{node.childMarkdownRemark.excerpt}</p>\n        </Link>\n        </div>\n      ))}\n    </div> \n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n  allFile(filter: {sourceInstanceName: {eq: \"projects\"}, internal: {mediaType: {eq: \"text/markdown\"}}}, sort: {fields: childMarkdownRemark___frontmatter___date, order: DESC}) {\n    edges {\n      node {\n        id\n        childMarkdownRemark {\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n  }`\n"],"sourceRoot":""}