{"version":3,"file":"component---src-pages-projects-js-123b7bb67e36578a897e.js","mappings":"6TAMe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,OACE,QAAC,IAAD,MACE,oBACE,cACEC,KAAKA,EAAAA,EAAAA,IAAF,kBACgBC,EAAAA,EAAAA,GAAO,GADvB,sDADL,aASA,oEACCF,EAAKG,QAAQC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACtB,eAAKC,IAAKD,EAAKE,KACb,QAAC,KAAD,CACEC,GAAIH,EAAKI,oBAAoBC,OAAOC,KACpCX,IAAG,IAKH,cACEA,KAAKA,EAAAA,EAAAA,IAAF,kBACgBC,EAAAA,EAAAA,GAAO,EAAI,GAD3B,SAIFI,EAAKI,oBAAoBG,YAAYC,MAAO,KAC7C,gBACEb,IAAG,IAGI,MAEX,iBAAIK,EAAKI,oBAAoBK","sources":["webpack://homepage/./src/pages/projects.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { css } from \"@emotion/react\";\nimport Layout from \"../components/layout\";\nimport { rhythm } from \"../utils/typography\";\n\nexport default function Projects({ data }) {\n  return (\n    <Layout>\n      <div>\n        <h2\n          css={css`\n            margin-bottom: ${rhythm(1)};\n            display: inline-block;\n            border-bottom: 1px solid;\n          `}\n        >\n          Projects\n        </h2>\n        <p>An overview of projects done | doing | planned.</p>\n        {data.allFile.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.childMarkdownRemark.fields.slug}\n              css={css`\n                text-decoration: none !important;\n                color: inherit;\n              `}\n            >\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {node.childMarkdownRemark.frontmatter.title}{\" \"}\n                <span\n                  css={css`\n                    color: #bbb;\n                  `}\n                ></span>{\" \"}\n              </h3>\n              <p>{node.childMarkdownRemark.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: {\n        sourceInstanceName: { eq: \"projects\" }\n        internal: { mediaType: { eq: \"text/markdown\" } }\n      }\n      sort: { fields: childMarkdownRemark___frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          childMarkdownRemark {\n            frontmatter {\n              date(formatString: \"DD MMMM, YYYY\")\n              title\n            }\n            excerpt\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Projects","data","css","rhythm","allFile","edges","map","node","key","id","to","childMarkdownRemark","fields","slug","frontmatter","title","excerpt"],"sourceRoot":""}